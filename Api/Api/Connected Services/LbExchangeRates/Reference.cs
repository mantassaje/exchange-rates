//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LbExchangeRates
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://webservices.lb.lt/ExchangeRates", ConfigurationName="LbExchangeRates.ExchangeRatesSoap")]
    public interface ExchangeRatesSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.lb.lt/ExchangeRates/getListOfCurrencies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<LbExchangeRates.getListOfCurrenciesResponse> getListOfCurrenciesAsync(LbExchangeRates.getListOfCurrenciesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.lb.lt/ExchangeRates/getCurrentExchangeRate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<LbExchangeRates.getCurrentExchangeRateResponse> getCurrentExchangeRateAsync(LbExchangeRates.getCurrentExchangeRateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.lb.lt/ExchangeRates/getExchangeRate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<LbExchangeRates.getExchangeRateResponse> getExchangeRateAsync(LbExchangeRates.getExchangeRateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.lb.lt/ExchangeRates/getExchangeRatesByDate_XmlString", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<LbExchangeRates.getExchangeRatesByDate_XmlStringResponse> getExchangeRatesByDate_XmlStringAsync(LbExchangeRates.getExchangeRatesByDate_XmlStringRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.lb.lt/ExchangeRates/getExchangeRatesByCurrency_XmlString", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<LbExchangeRates.getExchangeRatesByCurrency_XmlStringResponse> getExchangeRatesByCurrency_XmlStringAsync(LbExchangeRates.getExchangeRatesByCurrency_XmlStringRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.lb.lt/ExchangeRates/getExchangeRatesByDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<LbExchangeRates.getExchangeRatesByDateResponse> getExchangeRatesByDateAsync(LbExchangeRates.getExchangeRatesByDateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.lb.lt/ExchangeRates/getExchangeRatesXmlSchema", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<LbExchangeRates.getExchangeRatesXmlSchemaResponse> getExchangeRatesXmlSchemaAsync(LbExchangeRates.getExchangeRatesXmlSchemaRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.lb.lt/ExchangeRates/getExchangeRatesByCurrency", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<LbExchangeRates.getExchangeRatesByCurrencyResponse> getExchangeRatesByCurrencyAsync(LbExchangeRates.getExchangeRatesByCurrencyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://webservices.lb.lt/ExchangeRates/getExchangeAvgRate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<LbExchangeRates.getExchangeAvgRateResponse> getExchangeAvgRateAsync(LbExchangeRates.getExchangeAvgRateRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getListOfCurrencies", WrapperNamespace="http://webservices.lb.lt/ExchangeRates", IsWrapped=true)]
    public partial class getListOfCurrenciesRequest
    {
        
        public getListOfCurrenciesRequest()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getListOfCurrenciesResponse", WrapperNamespace="http://webservices.lb.lt/ExchangeRates", IsWrapped=true)]
    public partial class getListOfCurrenciesResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.lb.lt/ExchangeRates", Order=0)]
        public System.Xml.Linq.XElement getListOfCurrenciesResult;
        
        public getListOfCurrenciesResponse()
        {
        }
        
        public getListOfCurrenciesResponse(System.Xml.Linq.XElement getListOfCurrenciesResult)
        {
            this.getListOfCurrenciesResult = getListOfCurrenciesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getCurrentExchangeRate", WrapperNamespace="http://webservices.lb.lt/ExchangeRates", IsWrapped=true)]
    public partial class getCurrentExchangeRateRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.lb.lt/ExchangeRates", Order=0)]
        public string Currency;
        
        public getCurrentExchangeRateRequest()
        {
        }
        
        public getCurrentExchangeRateRequest(string Currency)
        {
            this.Currency = Currency;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getCurrentExchangeRateResponse", WrapperNamespace="http://webservices.lb.lt/ExchangeRates", IsWrapped=true)]
    public partial class getCurrentExchangeRateResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.lb.lt/ExchangeRates", Order=0)]
        public decimal getCurrentExchangeRateResult;
        
        public getCurrentExchangeRateResponse()
        {
        }
        
        public getCurrentExchangeRateResponse(decimal getCurrentExchangeRateResult)
        {
            this.getCurrentExchangeRateResult = getCurrentExchangeRateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getExchangeRate", WrapperNamespace="http://webservices.lb.lt/ExchangeRates", IsWrapped=true)]
    public partial class getExchangeRateRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.lb.lt/ExchangeRates", Order=0)]
        public string Currency;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.lb.lt/ExchangeRates", Order=1)]
        public string Date;
        
        public getExchangeRateRequest()
        {
        }
        
        public getExchangeRateRequest(string Currency, string Date)
        {
            this.Currency = Currency;
            this.Date = Date;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getExchangeRateResponse", WrapperNamespace="http://webservices.lb.lt/ExchangeRates", IsWrapped=true)]
    public partial class getExchangeRateResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.lb.lt/ExchangeRates", Order=0)]
        public decimal getExchangeRateResult;
        
        public getExchangeRateResponse()
        {
        }
        
        public getExchangeRateResponse(decimal getExchangeRateResult)
        {
            this.getExchangeRateResult = getExchangeRateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getExchangeRatesByDate_XmlString", WrapperNamespace="http://webservices.lb.lt/ExchangeRates", IsWrapped=true)]
    public partial class getExchangeRatesByDate_XmlStringRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.lb.lt/ExchangeRates", Order=0)]
        public string Date;
        
        public getExchangeRatesByDate_XmlStringRequest()
        {
        }
        
        public getExchangeRatesByDate_XmlStringRequest(string Date)
        {
            this.Date = Date;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getExchangeRatesByDate_XmlStringResponse", WrapperNamespace="http://webservices.lb.lt/ExchangeRates", IsWrapped=true)]
    public partial class getExchangeRatesByDate_XmlStringResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.lb.lt/ExchangeRates", Order=0)]
        public string getExchangeRatesByDate_XmlStringResult;
        
        public getExchangeRatesByDate_XmlStringResponse()
        {
        }
        
        public getExchangeRatesByDate_XmlStringResponse(string getExchangeRatesByDate_XmlStringResult)
        {
            this.getExchangeRatesByDate_XmlStringResult = getExchangeRatesByDate_XmlStringResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getExchangeRatesByCurrency_XmlString", WrapperNamespace="http://webservices.lb.lt/ExchangeRates", IsWrapped=true)]
    public partial class getExchangeRatesByCurrency_XmlStringRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.lb.lt/ExchangeRates", Order=0)]
        public string Currency;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.lb.lt/ExchangeRates", Order=1)]
        public string DateLow;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.lb.lt/ExchangeRates", Order=2)]
        public string DateHigh;
        
        public getExchangeRatesByCurrency_XmlStringRequest()
        {
        }
        
        public getExchangeRatesByCurrency_XmlStringRequest(string Currency, string DateLow, string DateHigh)
        {
            this.Currency = Currency;
            this.DateLow = DateLow;
            this.DateHigh = DateHigh;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getExchangeRatesByCurrency_XmlStringResponse", WrapperNamespace="http://webservices.lb.lt/ExchangeRates", IsWrapped=true)]
    public partial class getExchangeRatesByCurrency_XmlStringResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.lb.lt/ExchangeRates", Order=0)]
        public string getExchangeRatesByCurrency_XmlStringResult;
        
        public getExchangeRatesByCurrency_XmlStringResponse()
        {
        }
        
        public getExchangeRatesByCurrency_XmlStringResponse(string getExchangeRatesByCurrency_XmlStringResult)
        {
            this.getExchangeRatesByCurrency_XmlStringResult = getExchangeRatesByCurrency_XmlStringResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getExchangeRatesByDate", WrapperNamespace="http://webservices.lb.lt/ExchangeRates", IsWrapped=true)]
    public partial class getExchangeRatesByDateRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.lb.lt/ExchangeRates", Order=0)]
        public string Date;
        
        public getExchangeRatesByDateRequest()
        {
        }
        
        public getExchangeRatesByDateRequest(string Date)
        {
            this.Date = Date;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getExchangeRatesByDateResponse", WrapperNamespace="http://webservices.lb.lt/ExchangeRates", IsWrapped=true)]
    public partial class getExchangeRatesByDateResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.lb.lt/ExchangeRates", Order=0)]
        public System.Xml.Linq.XElement getExchangeRatesByDateResult;
        
        public getExchangeRatesByDateResponse()
        {
        }
        
        public getExchangeRatesByDateResponse(System.Xml.Linq.XElement getExchangeRatesByDateResult)
        {
            this.getExchangeRatesByDateResult = getExchangeRatesByDateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getExchangeRatesXmlSchema", WrapperNamespace="http://webservices.lb.lt/ExchangeRates", IsWrapped=true)]
    public partial class getExchangeRatesXmlSchemaRequest
    {
        
        public getExchangeRatesXmlSchemaRequest()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getExchangeRatesXmlSchemaResponse", WrapperNamespace="http://webservices.lb.lt/ExchangeRates", IsWrapped=true)]
    public partial class getExchangeRatesXmlSchemaResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.lb.lt/ExchangeRates", Order=0)]
        public string getExchangeRatesXmlSchemaResult;
        
        public getExchangeRatesXmlSchemaResponse()
        {
        }
        
        public getExchangeRatesXmlSchemaResponse(string getExchangeRatesXmlSchemaResult)
        {
            this.getExchangeRatesXmlSchemaResult = getExchangeRatesXmlSchemaResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getExchangeRatesByCurrency", WrapperNamespace="http://webservices.lb.lt/ExchangeRates", IsWrapped=true)]
    public partial class getExchangeRatesByCurrencyRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.lb.lt/ExchangeRates", Order=0)]
        public string Currency;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.lb.lt/ExchangeRates", Order=1)]
        public string DateLow;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.lb.lt/ExchangeRates", Order=2)]
        public string DateHigh;
        
        public getExchangeRatesByCurrencyRequest()
        {
        }
        
        public getExchangeRatesByCurrencyRequest(string Currency, string DateLow, string DateHigh)
        {
            this.Currency = Currency;
            this.DateLow = DateLow;
            this.DateHigh = DateHigh;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getExchangeRatesByCurrencyResponse", WrapperNamespace="http://webservices.lb.lt/ExchangeRates", IsWrapped=true)]
    public partial class getExchangeRatesByCurrencyResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.lb.lt/ExchangeRates", Order=0)]
        public System.Xml.Linq.XElement getExchangeRatesByCurrencyResult;
        
        public getExchangeRatesByCurrencyResponse()
        {
        }
        
        public getExchangeRatesByCurrencyResponse(System.Xml.Linq.XElement getExchangeRatesByCurrencyResult)
        {
            this.getExchangeRatesByCurrencyResult = getExchangeRatesByCurrencyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getExchangeAvgRate", WrapperNamespace="http://webservices.lb.lt/ExchangeRates", IsWrapped=true)]
    public partial class getExchangeAvgRateRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.lb.lt/ExchangeRates", Order=0)]
        public string Currency;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.lb.lt/ExchangeRates", Order=1)]
        public string DateLow;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.lb.lt/ExchangeRates", Order=2)]
        public string DateHigh;
        
        public getExchangeAvgRateRequest()
        {
        }
        
        public getExchangeAvgRateRequest(string Currency, string DateLow, string DateHigh)
        {
            this.Currency = Currency;
            this.DateLow = DateLow;
            this.DateHigh = DateHigh;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getExchangeAvgRateResponse", WrapperNamespace="http://webservices.lb.lt/ExchangeRates", IsWrapped=true)]
    public partial class getExchangeAvgRateResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://webservices.lb.lt/ExchangeRates", Order=0)]
        public System.Xml.Linq.XElement getExchangeAvgRateResult;
        
        public getExchangeAvgRateResponse()
        {
        }
        
        public getExchangeAvgRateResponse(System.Xml.Linq.XElement getExchangeAvgRateResult)
        {
            this.getExchangeAvgRateResult = getExchangeAvgRateResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public interface ExchangeRatesSoapChannel : LbExchangeRates.ExchangeRatesSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.0")]
    public partial class ExchangeRatesSoapClient : System.ServiceModel.ClientBase<LbExchangeRates.ExchangeRatesSoap>, LbExchangeRates.ExchangeRatesSoap
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ExchangeRatesSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(ExchangeRatesSoapClient.GetBindingForEndpoint(endpointConfiguration), ExchangeRatesSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ExchangeRatesSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ExchangeRatesSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ExchangeRatesSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ExchangeRatesSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ExchangeRatesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<LbExchangeRates.getListOfCurrenciesResponse> getListOfCurrenciesAsync(LbExchangeRates.getListOfCurrenciesRequest request)
        {
            return base.Channel.getListOfCurrenciesAsync(request);
        }
        
        public System.Threading.Tasks.Task<LbExchangeRates.getCurrentExchangeRateResponse> getCurrentExchangeRateAsync(LbExchangeRates.getCurrentExchangeRateRequest request)
        {
            return base.Channel.getCurrentExchangeRateAsync(request);
        }
        
        public System.Threading.Tasks.Task<LbExchangeRates.getExchangeRateResponse> getExchangeRateAsync(LbExchangeRates.getExchangeRateRequest request)
        {
            return base.Channel.getExchangeRateAsync(request);
        }
        
        public System.Threading.Tasks.Task<LbExchangeRates.getExchangeRatesByDate_XmlStringResponse> getExchangeRatesByDate_XmlStringAsync(LbExchangeRates.getExchangeRatesByDate_XmlStringRequest request)
        {
            return base.Channel.getExchangeRatesByDate_XmlStringAsync(request);
        }
        
        public System.Threading.Tasks.Task<LbExchangeRates.getExchangeRatesByCurrency_XmlStringResponse> getExchangeRatesByCurrency_XmlStringAsync(LbExchangeRates.getExchangeRatesByCurrency_XmlStringRequest request)
        {
            return base.Channel.getExchangeRatesByCurrency_XmlStringAsync(request);
        }
        
        public System.Threading.Tasks.Task<LbExchangeRates.getExchangeRatesByDateResponse> getExchangeRatesByDateAsync(LbExchangeRates.getExchangeRatesByDateRequest request)
        {
            return base.Channel.getExchangeRatesByDateAsync(request);
        }
        
        public System.Threading.Tasks.Task<LbExchangeRates.getExchangeRatesXmlSchemaResponse> getExchangeRatesXmlSchemaAsync(LbExchangeRates.getExchangeRatesXmlSchemaRequest request)
        {
            return base.Channel.getExchangeRatesXmlSchemaAsync(request);
        }
        
        public System.Threading.Tasks.Task<LbExchangeRates.getExchangeRatesByCurrencyResponse> getExchangeRatesByCurrencyAsync(LbExchangeRates.getExchangeRatesByCurrencyRequest request)
        {
            return base.Channel.getExchangeRatesByCurrencyAsync(request);
        }
        
        public System.Threading.Tasks.Task<LbExchangeRates.getExchangeAvgRateResponse> getExchangeAvgRateAsync(LbExchangeRates.getExchangeAvgRateRequest request)
        {
            return base.Channel.getExchangeAvgRateAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ExchangeRatesSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.ExchangeRatesSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.ExchangeRatesSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://old.lb.lt/webservices/ExchangeRates/ExchangeRates.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.ExchangeRatesSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://old.lb.lt/webservices/ExchangeRates/ExchangeRates.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            ExchangeRatesSoap,
            
            ExchangeRatesSoap12,
        }
    }
}
